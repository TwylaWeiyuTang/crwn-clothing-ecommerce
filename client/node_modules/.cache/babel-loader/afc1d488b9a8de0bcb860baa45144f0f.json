{"ast":null,"code":"var _jsxFileName = \"/Users/twyla/WebDevelopment/crwn-clothing/src/components/sign-in/SignInComponent.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport FormInputComponent from '../form-input/FormInputComponent';\nimport CustomButtonComponent from '../custom-button/CustomButtonComponent';\nimport { signInWithGoogle, auth } from '../../firebase/firebaseUtils';\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\nimport './signInStyle.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignIn = () => {\n  _s();\n\n  const [userCrendentials, setCrendentials] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = userCrendentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault(); // this will prevent the default submit action from firing\n\n    try {\n      await signInWithEmailAndPassword(auth, email, password); // if the above code succeed, we will clear our sign in form\n\n      setCrendentials({\n        email: '',\n        password: ''\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target; // pull of the value and name from the input itself\n\n    setCrendentials({ ...userCrendentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-in\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"I already have an account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign in with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInputComponent, {\n        name: \"email\",\n        type: \"email\",\n        value: email,\n        label: \"email\",\n        handleChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FormInputComponent, {\n        name: \"password\",\n        type: \"password\",\n        label: \"password\",\n        value: password,\n        handleChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(CustomButtonComponent, {\n          type: \"submit\",\n          children: \" Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CustomButtonComponent, {\n          type: \"button\",\n          onClick: signInWithGoogle,\n          isGoogleSignIn: true,\n          children: \"Sign in with Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 13\n  }, this);\n};\n\n_s(SignIn, \"dImm0+99iecJjXGZDOneNjH8Fq4=\");\n\n_c = SignIn;\nexport default SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["/Users/twyla/WebDevelopment/crwn-clothing/src/components/sign-in/SignInComponent.js"],"names":["useState","FormInputComponent","CustomButtonComponent","signInWithGoogle","auth","signInWithEmailAndPassword","SignIn","userCrendentials","setCrendentials","email","password","handleSubmit","event","preventDefault","error","console","log","handleChange","value","name","target"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,OAAOC,kBAAP,MAA+B,kCAA/B;AACA,OAAOC,qBAAP,MAAkC,wCAAlC;AACA,SAASC,gBAAT,EAA2BC,IAA3B,QAAuC,8BAAvC;AACA,SAASC,0BAAT,QAA2C,eAA3C;AAEA,OAAO,oBAAP;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,gBAAD,EAAmBC,eAAnB,IAAsCR,QAAQ,CAAC;AAACS,IAAAA,KAAK,EAAE,EAAR;AAAYC,IAAAA,QAAQ,EAAE;AAAtB,GAAD,CAApD;AAEA,QAAM;AAAED,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBH,gBAA5B;;AACA,QAAMI,YAAY,GAAG,MAAMC,KAAN,IAAe;AAChCA,IAAAA,KAAK,CAACC,cAAN,GADgC,CACT;;AAEvB,QAAI;AACA,YAAMR,0BAA0B,CAACD,IAAD,EAAOK,KAAP,EAAcC,QAAd,CAAhC,CADA,CAEA;;AACAF,MAAAA,eAAe,CAAC;AAACC,QAAAA,KAAK,EAAE,EAAR;AAAYC,QAAAA,QAAQ,EAAE;AAAtB,OAAD,CAAf;AACH,KAJD,CAIE,OAAMI,KAAN,EAAa;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,GAVD;;AAYA,QAAMG,YAAY,GAAGL,KAAK,IAAI;AAC1B,UAAM;AAACM,MAAAA,KAAD;AAAQC,MAAAA;AAAR,QAAgBP,KAAK,CAACQ,MAA5B,CAD0B,CACS;;AACnCZ,IAAAA,eAAe,CAAC,EAAC,GAAGD,gBAAJ;AAAsB,OAACY,IAAD,GAAQD;AAA9B,KAAD,CAAf;AACH,GAHD;;AAMI,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAII;AAAM,MAAA,QAAQ,EAAEP,YAAhB;AAAA,8BACI,QAAC,kBAAD;AACA,QAAA,IAAI,EAAC,OADL;AAEA,QAAA,IAAI,EAAC,OAFL;AAGA,QAAA,KAAK,EAAEF,KAHP;AAIA,QAAA,KAAK,EAAC,OAJN;AAKA,QAAA,YAAY,EAAEQ,YALd;AAMA,QAAA,QAAQ;AANR;AAAA;AAAA;AAAA;AAAA,cADJ,eASI,QAAC,kBAAD;AACA,QAAA,IAAI,EAAC,UADL;AAEA,QAAA,IAAI,EAAC,UAFL;AAGA,QAAA,KAAK,EAAC,UAHN;AAIA,QAAA,KAAK,EAAEP,QAJP;AAKA,QAAA,YAAY,EAAEO,YALd;AAMA,QAAA,QAAQ;AANR;AAAA;AAAA;AAAA;AAAA,cATJ,eAiBI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACI,QAAC,qBAAD;AAAuB,UAAA,IAAI,EAAC,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,qBAAD;AAAuB,UAAA,IAAI,EAAC,QAA5B;AAAqC,UAAA,OAAO,EAAEd,gBAA9C;AAAgE,UAAA,cAAc,MAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgCP,CAtDD;;GAAMG,M;;KAAAA,M;AAwDN,eAAeA,MAAf","sourcesContent":["import {useState} from 'react';\nimport FormInputComponent from '../form-input/FormInputComponent';\nimport CustomButtonComponent from '../custom-button/CustomButtonComponent';\nimport { signInWithGoogle, auth } from '../../firebase/firebaseUtils';\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\n\nimport './signInStyle.scss'\n\nconst SignIn = () => {\n    const [userCrendentials, setCrendentials] = useState({email: '', password: ''})\n\n    const { email, password } = userCrendentials\n    const handleSubmit = async event => {\n        event.preventDefault() // this will prevent the default submit action from firing\n\n        try {\n            await signInWithEmailAndPassword(auth, email, password)\n            // if the above code succeed, we will clear our sign in form\n            setCrendentials({email: '', password: ''})\n        } catch(error) {\n            console.log(error)\n        }\n    }\n\n    const handleChange = event => {\n        const {value, name} = event.target // pull of the value and name from the input itself\n        setCrendentials({...userCrendentials, [name]: value})\n    }\n\n\n        return (\n            <div className='sign-in'>\n                <h2>I already have an account</h2>\n                <span>Sign in with your email and password</span>\n\n                <form onSubmit={handleSubmit}>\n                    <FormInputComponent\n                    name='email' \n                    type='email' \n                    value={email} \n                    label='email'\n                    handleChange={handleChange} \n                    required/>\n\n                    <FormInputComponent\n                    name='password'\n                    type='password' \n                    label='password'\n                    value={password} \n                    handleChange={handleChange} \n                    required/>\n\n                    <div className='buttons'>\n                        <CustomButtonComponent type='submit'> Sign in</CustomButtonComponent>\n                        <CustomButtonComponent type='button' onClick={signInWithGoogle} isGoogleSignIn>\n                            Sign in with Google\n                        </CustomButtonComponent>\n                    </div>\n                </form>\n            </div>\n        )\n\n}\n\nexport default SignIn"]},"metadata":{},"sourceType":"module"}