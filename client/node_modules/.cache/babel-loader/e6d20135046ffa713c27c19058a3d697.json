{"ast":null,"code":"var _jsxFileName = \"/Users/twyla/WebDevelopment/crwn-clothing/client/src/components/stripe-button/StripeButton.js\";\nimport React from 'react';\nimport { Elements } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\nimport CheckoutForm from '../stripe-checkout-form/StripeCheckout'; // Make sure to call `loadStripe` outside of a component’s render to avoid\n// recreating the `Stripe` object on every render.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stripePromise = loadStripe('pk_test_51KksksENpvpK9J8psPLe7fxjiNMjwNLM7GxWowCDdDm1XTaFSs8LKrK1Fef5nFLKOa8SSMVsRJ6a1kQXt7HrAsse00qgExWD6S');\n\nconst StripeButton = () => {\n  const options = {\n    // passing the client secret obtained in step 2\n    clientSecret: (async () => {\n      const response = await fetch('/secret');\n      const {\n        client_secret: clientSecret\n      } = await response.json(); // Render the Payment Element using the clientSecret\n    })(),\n    // Fully customizable with appearance API.\n    appearance: {\n      /*...*/\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Elements, {\n    stripe: stripePromise,\n    options: options,\n    children: /*#__PURE__*/_jsxDEV(CheckoutForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_c = StripeButton;\nexport default StripeButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"StripeButton\");","map":{"version":3,"sources":["/Users/twyla/WebDevelopment/crwn-clothing/client/src/components/stripe-button/StripeButton.js"],"names":["React","Elements","loadStripe","CheckoutForm","stripePromise","StripeButton","options","clientSecret","response","fetch","client_secret","json","appearance"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,yBAAvB;AACA,SAAQC,UAAR,QAAyB,mBAAzB;AAEA,OAAOC,YAAP,MAAyB,wCAAzB,C,CAEA;AACA;;;AACA,MAAMC,aAAa,GAAGF,UAAU,CAAC,6GAAD,CAAhC;;AAEA,MAAMG,YAAY,GAAG,MAAM;AACzB,QAAMC,OAAO,GAAG;AACd;AACAC,IAAAA,YAAY,EAAE,CAAC,YAAY;AACzB,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,SAAD,CAA5B;AACA,YAAM;AAACC,QAAAA,aAAa,EAAEH;AAAhB,UAAgC,MAAMC,QAAQ,CAACG,IAAT,EAA5C,CAFyB,CAGzB;AACD,KAJa,GAFA;AAOd;AACAC,IAAAA,UAAU,EAAE;AAAC;AAAD;AARE,GAAhB;AAWA,sBACE,QAAC,QAAD;AAAU,IAAA,MAAM,EAAER,aAAlB;AAAiC,IAAA,OAAO,EAAEE,OAA1C;AAAA,2BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAjBD;;KAAMD,Y;AAmBN,eAAeA,YAAf","sourcesContent":["import React from 'react';\nimport {Elements} from '@stripe/react-stripe-js';\nimport {loadStripe} from '@stripe/stripe-js';\n\nimport CheckoutForm from '../stripe-checkout-form/StripeCheckout';\n\n// Make sure to call `loadStripe` outside of a component’s render to avoid\n// recreating the `Stripe` object on every render.\nconst stripePromise = loadStripe('pk_test_51KksksENpvpK9J8psPLe7fxjiNMjwNLM7GxWowCDdDm1XTaFSs8LKrK1Fef5nFLKOa8SSMVsRJ6a1kQXt7HrAsse00qgExWD6S');\n\nconst StripeButton = () => {\n  const options = {\n    // passing the client secret obtained in step 2\n    clientSecret: (async () => {\n      const response = await fetch('/secret');\n      const {client_secret: clientSecret} = await response.json();\n      // Render the Payment Element using the clientSecret\n    })(),\n    // Fully customizable with appearance API.\n    appearance: {/*...*/},\n  };\n\n  return (\n    <Elements stripe={stripePromise} options={options}>\n      <CheckoutForm />\n    </Elements>\n  );\n};\n\nexport default StripeButton\n\n"]},"metadata":{},"sourceType":"module"}