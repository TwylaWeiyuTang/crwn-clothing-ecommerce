{"ast":null,"code":"var _jsxFileName = \"/Users/twyla/WebDevelopment/crwn-clothing/src/components/sign-in/SignInComponent.js\";\nimport React from 'react';\nimport FormInputComponent from '../form-input/FormInputComponent';\nimport CustomButtonComponent from '../custom-button/CustomButtonComponent';\nimport { signInWithGoogle, auth } from '../../firebase/firebaseUtils';\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\nimport './signInStyle.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      event.preventDefault(); // this will prevent the default submit action from firing\n\n      const {\n        email,\n        password\n      } = this.state;\n\n      try {\n        await signInWithEmailAndPassword(auth, email, password); // if the above code succeed, we will clear our sign in form\n\n        this.setState({\n          email: '',\n          password: ''\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.handleChange = event => {\n      const {\n        value,\n        name\n      } = event.target; // pull of the value and name from the input itself\n\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sign-in\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"I already have an account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Sign in with your email and password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormInputComponent, {\n          name: \"email\",\n          type: \"email\",\n          value: this.state.email,\n          label: \"email\",\n          handleChange: this.handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormInputComponent, {\n          name: \"password\",\n          type: \"password\",\n          label: \"password\",\n          value: this.state.password,\n          handleChange: this.handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons\",\n          children: [/*#__PURE__*/_jsxDEV(CustomButtonComponent, {\n            type: \"submit\",\n            children: \" Sign in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CustomButtonComponent, {\n            type: \"button\",\n            onClick: signInWithGoogle,\n            isGoogleSignIn: true,\n            children: [' ', \"Sign in with Google\", ' ']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default SignIn;","map":{"version":3,"sources":["/Users/twyla/WebDevelopment/crwn-clothing/src/components/sign-in/SignInComponent.js"],"names":["React","FormInputComponent","CustomButtonComponent","signInWithGoogle","auth","signInWithEmailAndPassword","SignIn","Component","constructor","props","handleSubmit","event","preventDefault","email","password","state","setState","error","console","log","handleChange","value","name","target","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,kCAA/B;AACA,OAAOC,qBAAP,MAAkC,wCAAlC;AACA,SAASC,gBAAT,EAA2BC,IAA3B,QAAuC,8BAAvC;AACA,SAASC,0BAAT,QAA2C,eAA3C;AAEA,OAAO,oBAAP;;;AAEA,MAAMC,MAAN,SAAqBN,KAAK,CAACO,SAA3B,CAAqC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SASnBC,YATmB,GASJ,MAAMC,KAAN,IAAe;AAC1BA,MAAAA,KAAK,CAACC,cAAN,GAD0B,CACH;;AAEvB,YAAM;AAAEC,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAAsB,KAAKC,KAAjC;;AAEA,UAAI;AACA,cAAMV,0BAA0B,CAACD,IAAD,EAAOS,KAAP,EAAcC,QAAd,CAAhC,CADA,CAEA;;AACA,aAAKE,QAAL,CAAc;AAACH,UAAAA,KAAK,EAAE,EAAR;AAAYC,UAAAA,QAAQ,EAAE;AAAtB,SAAd;AACH,OAJD,CAIE,OAAMG,KAAN,EAAa;AACXC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,KArBkB;;AAAA,SAuBnBG,YAvBmB,GAuBJT,KAAK,IAAI;AACpB,YAAM;AAACU,QAAAA,KAAD;AAAQC,QAAAA;AAAR,UAAgBX,KAAK,CAACY,MAA5B,CADoB,CACe;;AACnC,WAAKP,QAAL,CAAc;AAAC,SAACM,IAAD,GAAQD;AAAT,OAAd;AACH,KA1BkB;;AAGf,SAAKN,KAAL,GAAW;AACPF,MAAAA,KAAK,EAAE,EADA;AAEPC,MAAAA,QAAQ,EAAE;AAFH,KAAX;AAIH;;AAqBDU,EAAAA,MAAM,GAAI;AACN,wBACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAII;AAAM,QAAA,QAAQ,EAAE,KAAKd,YAArB;AAAA,gCACI,QAAC,kBAAD;AACA,UAAA,IAAI,EAAC,OADL;AAEA,UAAA,IAAI,EAAC,OAFL;AAGA,UAAA,KAAK,EAAE,KAAKK,KAAL,CAAWF,KAHlB;AAIA,UAAA,KAAK,EAAC,OAJN;AAKA,UAAA,YAAY,EAAE,KAAKO,YALnB;AAMA,UAAA,QAAQ;AANR;AAAA;AAAA;AAAA;AAAA,gBADJ,eASI,QAAC,kBAAD;AACA,UAAA,IAAI,EAAC,UADL;AAEA,UAAA,IAAI,EAAC,UAFL;AAGA,UAAA,KAAK,EAAC,UAHN;AAIA,UAAA,KAAK,EAAE,KAAKL,KAAL,CAAWD,QAJlB;AAKA,UAAA,YAAY,EAAE,KAAKM,YALnB;AAMA,UAAA,QAAQ;AANR;AAAA;AAAA;AAAA;AAAA,gBATJ,eAiBI;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,kCACI,QAAC,qBAAD;AAAuB,YAAA,IAAI,EAAC,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,qBAAD;AAAuB,YAAA,IAAI,EAAC,QAA5B;AAAqC,YAAA,OAAO,EAAEjB,gBAA9C;AAAgE,YAAA,cAAc,MAA9E;AAAA,uBACK,GADL,yBAEwB,GAFxB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAgCH;;AA9DgC;;AAiErC,eAAeG,MAAf","sourcesContent":["import React from 'react';\nimport FormInputComponent from '../form-input/FormInputComponent';\nimport CustomButtonComponent from '../custom-button/CustomButtonComponent';\nimport { signInWithGoogle, auth } from '../../firebase/firebaseUtils';\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\n\nimport './signInStyle.scss'\n\nclass SignIn extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state={\n            email: '',\n            password: ''\n        }\n    }\n\n    handleSubmit = async event => {\n        event.preventDefault() // this will prevent the default submit action from firing\n\n        const { email, password } = this.state\n\n        try {\n            await signInWithEmailAndPassword(auth, email, password)\n            // if the above code succeed, we will clear our sign in form\n            this.setState({email: '', password: ''})\n        } catch(error) {\n            console.log(error)\n        }\n    }\n\n    handleChange = event => {\n        const {value, name} = event.target // pull of the value and name from the input itself\n        this.setState({[name]: value})\n    }\n\n    render () {\n        return (\n            <div className='sign-in'>\n                <h2>I already have an account</h2>\n                <span>Sign in with your email and password</span>\n\n                <form onSubmit={this.handleSubmit}>\n                    <FormInputComponent\n                    name='email' \n                    type='email' \n                    value={this.state.email} \n                    label='email'\n                    handleChange={this.handleChange} \n                    required/>\n\n                    <FormInputComponent\n                    name='password'\n                    type='password' \n                    label='password'\n                    value={this.state.password} \n                    handleChange={this.handleChange} \n                    required/>\n\n                    <div className='buttons'>\n                        <CustomButtonComponent type='submit'> Sign in</CustomButtonComponent>\n                        <CustomButtonComponent type='button' onClick={signInWithGoogle} isGoogleSignIn>\n                            {' '}\n                            Sign in with Google{' '}\n                        </CustomButtonComponent>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default SignIn"]},"metadata":{},"sourceType":"module"}