{"ast":null,"code":"import { createSelector } from \"reselect\"; // input selector\n\nconst selectCart = state => state.cart; //output selector uses an input selector with createSelector to build themselves\n\n\nexport const selectCartItems = createSelector([selectCart], cart => cart.cartItems); // this is a memorior selector\n\nexport const selectCartItemsCount = createSelector([selectCartItems], // get our cart items from the above output selector\ncartItems => cartItems.reduce((accumulatedQuantity, cartItem) => accumulatedQuantity + cartItem.quantity, 0) // The reduce() method add up the already accumulated value and the next value that is\n// going to be accumulated\n// 0  means it starts from adding 0 with the first element in the array\n); // this gives us the total quantity of our cart items","map":{"version":3,"sources":["/Users/twyla/WebDevelopment/crwn-clothing/src/redux/cart/cartSelectors.js"],"names":["createSelector","selectCart","state","cart","selectCartItems","cartItems","selectCartItemsCount","reduce","accumulatedQuantity","cartItem","quantity"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B,C,CAEA;;AACA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC,C,CAEA;;;AACA,OAAO,MAAMC,eAAe,GAAGJ,cAAc,CACzC,CAACC,UAAD,CADyC,EAExCE,IAAD,IAAUA,IAAI,CAACE,SAF0B,CAAtC,C,CAIP;;AAEA,OAAO,MAAMC,oBAAoB,GAAGN,cAAc,CAC9C,CAACI,eAAD,CAD8C,EAC3B;AACnBC,SAAS,IACRA,SAAS,CAACE,MAAV,CACI,CAACC,mBAAD,EAAsBC,QAAtB,KACGD,mBAAmB,GAAGC,QAAQ,CAACC,QAFtC,EAEgD,CAFhD,CAH6C,CAMlD;AACE;AACA;AARgD,CAA3C,C,CAUL","sourcesContent":["import { createSelector } from \"reselect\";\n\n// input selector\nconst selectCart = state => state.cart\n\n//output selector uses an input selector with createSelector to build themselves\nexport const selectCartItems = createSelector(\n    [selectCart],\n    (cart) => cart.cartItems\n)\n// this is a memorior selector\n\nexport const selectCartItemsCount = createSelector(\n    [selectCartItems], // get our cart items from the above output selector\n    cartItems =>\n     cartItems.reduce(\n         (accumulatedQuantity, cartItem) => \n            accumulatedQuantity + cartItem.quantity, 0) \n// The reduce() method add up the already accumulated value and the next value that is\n  // going to be accumulated\n  // 0  means it starts from adding 0 with the first element in the array\n  \n) // this gives us the total quantity of our cart items"]},"metadata":{},"sourceType":"module"}