{"version":3,"file":"static/js/399.d1227cda.chunk.js","mappings":"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","sources":["pages/sign-in-and-sign-up/SignInandSignUpStyles.js","components/form-input/FormInputStyle.js","components/form-input/FormInputComponent.js","components/sign-in/SignInStyles.js","components/sign-in/SignInComponent.js","components/sign-up/SignUpStyles.js","components/sign-up/SignUpComponent.js","pages/sign-in-and-sign-up/SignInandSignUp.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const SignInAndSignUpContainer = styled.div`\n  width: 850px;\n  display: flex;\n  justify-content: space-between;\n  margin: 30px auto;\n\n  @media screen and (max-width: 800px) {\n    width: 100vw;\n    flex-direction: column;\n  }\n`;","import styled, { css } from 'styled-components';\n\nconst subColor = 'grey';\nconst mainColor = 'black';\n\nconst shrinkLabelStyles = css`\n  top: -14px;\n  font-size: 12px;\n  color: ${mainColor};\n`;\n\nexport const GroupContainer = styled.div`\n  position: relative;\n  margin: 45px 0;\n  input[type='password'] {\n    letter-spacing: 0.3em;\n  }\n`;\n\nexport const FormInputContainer = styled.input`\n  background: none;\n  background-color: white;\n  color: ${subColor};\n  font-size: 18px;\n  padding: 10px 10px 10px 5px;\n  display: block;\n  width: 100%;\n  border: none;\n  border-radius: 0;\n  border-bottom: 1px solid ${subColor};\n  margin: 25px 0;\n  &:focus {\n    outline: none;\n  }\n  &:focus ~ label {\n    ${shrinkLabelStyles}\n  }\n`;\n\nexport const FormInputLabel = styled.label`\n  color: ${subColor};\n  font-size: 16px;\n  font-weight: normal;\n  position: absolute;\n  pointer-events: none;\n  left: 5px;\n  top: 10px;\n  transition: 300ms ease all;\n  &.shrink {\n    ${shrinkLabelStyles}\n  }\n`;","import React from 'react'\nimport { FormInputContainer, GroupContainer, FormInputLabel } from './FormInputStyle'\n\nconst FormInputComponent = ({handleChange, label, ...props}) => {\n  return (\n    <GroupContainer>\n        <FormInputContainer onChange={handleChange} {...props} />\n        { \n            label ? /* If there is a label props being passed in, then we will generate a lable html */\n            (<FormInputLabel className={props.value.length ? 'shrink' : ''}>\n                {/* if there is the value being typed by the user in the label field, \n                then we will apply the property of shrink, otherwise it will be an empty string  */}\n                {label}\n            </FormInputLabel>)\n            : null\n        }\n    </GroupContainer>\n  )\n}\n\nexport default FormInputComponent","import styled from 'styled-components';\n\nexport const SignInContainer = styled.div`\n  width: 380px;\n  display: flex;\n  flex-direction: column;\n\n  @media screen and (max-width: 800px) {\n    width: 80vw;\n    margin-bottom: 30px;\n    margin-left: 10px;\n  }\n`;\n\nexport const SignInTitle = styled.h2`\n  margin: 10px 0;\n`;\n\nexport const ButtonsBarContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;","import {useState} from 'react';\nimport FormInputComponent from '../form-input/FormInputComponent';\nimport CustomButtonComponent from '../custom-button/CustomButtonComponent';\nimport { signInWithGoogle, auth } from '../../firebase/firebaseUtils';\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\nimport { SignInContainer,\n    SignInTitle,\n    ButtonsBarContainer} from './SignInStyles'\n\nconst SignIn = () => {\n    const [userCrendentials, setCrendentials] = useState({email: '', password: ''})\n\n    const { email, password } = userCrendentials\n    const handleSubmit = async event => {\n        event.preventDefault() // this will prevent the default submit action from firing\n\n        try {\n            await signInWithEmailAndPassword(auth, email, password)\n            // if the above code succeed, we will clear our sign in form\n            setCrendentials({email: '', password: ''})\n        } catch(error) {\n            console.log(error)\n        }\n    }\n\n    const handleChange = event => {\n        const {value, name} = event.target // pull of the value and name from the input itself\n        setCrendentials({...userCrendentials, [name]: value})\n    }\n\n\n        return (\n            <SignInContainer>\n                <SignInTitle>I already have an account</SignInTitle>\n                <span>Sign in with your email and password</span>\n\n                <form onSubmit={handleSubmit}>\n                    <FormInputComponent\n                    name='email' \n                    type='email' \n                    value={email} \n                    label='email'\n                    handleChange={handleChange} \n                    required/>\n\n                    <FormInputComponent\n                    name='password'\n                    type='password' \n                    label='password'\n                    value={password} \n                    handleChange={handleChange} \n                    required/>\n\n                    <ButtonsBarContainer>\n                        <CustomButtonComponent type='submit'> Sign in</CustomButtonComponent>\n                        <CustomButtonComponent type='button' onClick={signInWithGoogle} isGoogleSignIn>\n                            Sign in with Google\n                        </CustomButtonComponent>\n                    </ButtonsBarContainer>\n                </form>\n            </SignInContainer>\n        )\n\n}\n\nexport default SignIn","import styled from 'styled-components';\n\nexport const SignUpContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 380px;\n\n  @media screen and (max-width: 800px) {\n    width: 80vw;\n    margin-left: 10px;\n  }\n`;\n\nexport const SignUpTitle = styled.h2`\n  margin: 10px 0;\n`;","import {useState} from 'react'\nimport FormInputComponent from '../form-input/FormInputComponent'\nimport CustomButtonComponent from '../custom-button/CustomButtonComponent'\nimport { SignUpContainer, SignUpTitle } from './SignUpStyles'\n\nimport { auth, createUserProfileDocument } from '../../firebase/firebaseUtils'\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\n\nconst SignUpComponent = () => {\n   const [userCrendentials, setCrendentials] = useState({\n        displayName: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n   })\n\n   const {displayName, email, password, confirmPassword} = userCrendentials\n\n    const handleSubmit = async event => {\n        event.preventDefault();\n        if (password !== confirmPassword) {\n            alert(\"passwords don't match\")\n            return\n        }\n\n        try {\n            const {user} = await createUserWithEmailAndPassword(auth, email, password) \n            // create a new user with this email and password \n\n            await createUserProfileDocument(user, {displayName}); // this is to create the user\n            // into our database\n\n        }catch(error) {\n            console.log(error)\n        }\n    }\n\n    const handleChange = event => {\n        const {name, value} = event.target\n        setCrendentials({...userCrendentials, [name]: value})\n    }\n\n        return (\n            <SignUpContainer>\n                <SignUpTitle>I do not have a account</SignUpTitle>\n                <span>Sign up with your email and password</span>\n                <form className='sign-up-form' onSubmit={handleSubmit}>\n                    <FormInputComponent type='text' name='displayName' value={displayName} onChange = {handleChange} label='Display Name' required />\n                    <FormInputComponent type='email' name='email' value={email} onChange = {handleChange} label='Email' required />\n                    <FormInputComponent type='password' name='password' value={password} onChange = {handleChange} label='Password' required />\n                    <FormInputComponent type='password' name='confirmPassword' value={confirmPassword} onChange = {handleChange} label='Confirm Password' required />\n                    <CustomButtonComponent type='submit'>SIGN UP</CustomButtonComponent>\n                </form>\n            </SignUpContainer>\n          )\n    }\n\nexport default SignUpComponent","import React from 'react'\nimport { SignInAndSignUpContainer } from './SignInandSignUpStyles'\n\nimport SignIn from '../../components/sign-in/SignInComponent'\nimport SignUpComponent from '../../components/sign-up/SignUpComponent'\n\nconst SignInandSignUp = () => {\n  return (\n    <SignInAndSignUpContainer>\n        <SignIn />\n        <SignUpComponent />\n    </SignInAndSignUpContainer>\n  )\n}\n\nexport default SignInandSignUp"],"names":["SignInAndSignUpContainer","styled","subColor","shrinkLabelStyles","css","GroupContainer","FormInputContainer","FormInputLabel","handleChange","label","props","onChange","className","value","length","SignInContainer","SignInTitle","ButtonsBarContainer","useState","email","password","userCrendentials","setCrendentials","handleSubmit","event","preventDefault","signInWithEmailAndPassword","auth","console","log","target","name","onSubmit","type","required","CustomButtonComponent","onClick","signInWithGoogle","isGoogleSignIn","SignUpContainer","SignUpTitle","displayName","confirmPassword","alert","createUserWithEmailAndPassword","user","createUserProfileDocument"],"sourceRoot":""}