{"ast":null,"code":"var _jsxFileName = \"/Users/twyla/WebDevelopment/crwn-clothing/src/components/cart-icon/CartIconComponent.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport './cartIconStyle.scss';\nimport { toggleCartHidden } from '../../redux/cart/cartActions';\nimport { ReactComponent as ShoppingIcon } from '../../assets/bag.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CartIconComponent = _ref => {\n  let {\n    toggleCartHidden,\n    itemCount\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cart-icon\",\n    onClick: toggleCartHidden,\n    children: [/*#__PURE__*/_jsxDEV(ShoppingIcon, {\n      className: \"shopping-icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"item-count\",\n      children: itemCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CartIconComponent;\n\nconst mapDispatchToProps = dispatch => ({\n  toggleCartHidden: () => dispatch(toggleCartHidden())\n}); // trigger the toggleCartHidden in cart reducer\n\n\nconst mapStateToProps = _ref2 => {\n  let {\n    cart: {\n      cartItems\n    }\n  } = _ref2;\n  return {\n    // pull off cart state from root reducer\n    itemCount: cartItems.reduce((accumulatedQuantity, cartItem) => accumulatedQuantity + cartItem.quantity, 0) // The reduce() method add up the already accumulated value and the next value that is\n    // going to be accumulated\n    // 0  means it starts from adding 0 with the first element in the array\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartIconComponent); // make toggleCartHidden available as a props in the above component\n\nvar _c;\n\n$RefreshReg$(_c, \"CartIconComponent\");","map":{"version":3,"sources":["/Users/twyla/WebDevelopment/crwn-clothing/src/components/cart-icon/CartIconComponent.js"],"names":["React","connect","toggleCartHidden","ReactComponent","ShoppingIcon","CartIconComponent","itemCount","mapDispatchToProps","dispatch","mapStateToProps","cart","cartItems","reduce","accumulatedQuantity","cartItem","quantity"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,sBAAP;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,SAASC,cAAc,IAAIC,YAA3B,QAA8C,sBAA9C;;;AAEA,MAAMC,iBAAiB,GAAG,QAAmC;AAAA,MAAlC;AAACH,IAAAA,gBAAD;AAAmBI,IAAAA;AAAnB,GAAkC;AAC3D,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,OAAO,EAAEJ,gBAApC;AAAA,4BACI,QAAC,YAAD;AAAc,MAAA,SAAS,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAM,MAAA,SAAS,EAAC,YAAhB;AAAA,gBAA8BI;AAA9B;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAPD;;KAAMD,iB;;AASN,MAAME,kBAAkB,GAAGC,QAAQ,KAAK;AACpCN,EAAAA,gBAAgB,EAAE,MAAMM,QAAQ,CAACN,gBAAgB,EAAjB;AADI,CAAL,CAAnC,C,CAEG;;;AAEH,MAAMO,eAAe,GAAG;AAAA,MAAC;AAACC,IAAAA,IAAI,EAAE;AAACC,MAAAA;AAAD;AAAP,GAAD;AAAA,SAA0B;AAAE;AAClDL,IAAAA,SAAS,EAAEK,SAAS,CAACC,MAAV,CAAiB,CAACC,mBAAD,EAAsBC,QAAtB,KAAmCD,mBAAmB,GAAGC,QAAQ,CAACC,QAAnF,EAA6F,CAA7F,CADqC,CAEhD;AACA;AACA;;AAJgD,GAA1B;AAAA,CAAxB;;AAMA,eAAed,OAAO,CAAEQ,eAAF,EAAmBF,kBAAnB,CAAP,CAA8CF,iBAA9C,CAAf,C,CACA","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport './cartIconStyle.scss'\nimport { toggleCartHidden } from '../../redux/cart/cartActions'\nimport { ReactComponent as ShoppingIcon} from '../../assets/bag.svg'\n\nconst CartIconComponent = ({toggleCartHidden, itemCount}) => {\n  return (\n    <div className='cart-icon' onClick={toggleCartHidden}>\n        <ShoppingIcon className='shopping-icon' />\n        <span className='item-count'>{itemCount}</span>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = dispatch => ({\n    toggleCartHidden: () => dispatch(toggleCartHidden())\n}) // trigger the toggleCartHidden in cart reducer\n\nconst mapStateToProps = ({cart: {cartItems}}) => ({ // pull off cart state from root reducer\n  itemCount: cartItems.reduce((accumulatedQuantity, cartItem) => accumulatedQuantity + cartItem.quantity, 0) \n  // The reduce() method add up the already accumulated value and the next value that is\n  // going to be accumulated\n  // 0  means it starts from adding 0 with the first element in the array\n})\nexport default connect (mapStateToProps, mapDispatchToProps)(CartIconComponent)\n// make toggleCartHidden available as a props in the above component"]},"metadata":{},"sourceType":"module"}