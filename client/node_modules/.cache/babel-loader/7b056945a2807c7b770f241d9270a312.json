{"ast":null,"code":"var _jsxFileName = \"/Users/twyla/WebDevelopment/crwn-clothing/src/components/with-spinner/WithSpinner.js\";\nimport { SpinnerOverlay, SpinnerContainer } from \"./WithSpinnerStyle\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WithSpinner = WrappedComponent => {\n  const Spinner = _ref => {\n    let {\n      isLoading,\n      ...otherProps\n    } = _ref;\n    return isLoading ? /*#__PURE__*/_jsxDEV(SpinnerOverlay, {\n      children: /*#__PURE__*/_jsxDEV(SpinnerContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(WrappedComponent, { ...otherProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this);\n  }; // this is a functional spinner component\n\n\n  return Spinner;\n}; // this is a higer order component\n// it is a function that takes some component that we want to wrap\n\n\n_c = WithSpinner;\nexport default WithSpinner;\n\nvar _c;\n\n$RefreshReg$(_c, \"WithSpinner\");","map":{"version":3,"sources":["/Users/twyla/WebDevelopment/crwn-clothing/src/components/with-spinner/WithSpinner.js"],"names":["SpinnerOverlay","SpinnerContainer","WithSpinner","WrappedComponent","Spinner","isLoading","otherProps"],"mappings":";AAAA,SAASA,cAAT,EAAyBC,gBAAzB,QAAiD,oBAAjD;;;AAEA,MAAMC,WAAW,GAAGC,gBAAgB,IAAG;AACnC,QAAMC,OAAO,GAAG,QAAgC;AAAA,QAA/B;AAACC,MAAAA,SAAD;AAAY,SAAGC;AAAf,KAA+B;AAChD,WAAOD,SAAS,gBACZ,QAAC,cAAD;AAAA,6BACI,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADY,gBAKZ,QAAC,gBAAD,OAAsBC;AAAtB;AAAA;AAAA;AAAA;AAAA,YALJ;AAOC,GARD,CADmC,CASjC;;;AACF,SAAOF,OAAP;AACH,CAXD,C,CAYA;AACA;;;KAbMF,W;AAcN,eAAeA,WAAf","sourcesContent":["import { SpinnerOverlay, SpinnerContainer } from \"./WithSpinnerStyle\";\n\nconst WithSpinner = WrappedComponent =>{\n    const Spinner = ({isLoading, ...otherProps}) => {\n    return isLoading ? (\n        <SpinnerOverlay>\n            <SpinnerContainer />\n        </SpinnerOverlay>\n    ) : (\n        <WrappedComponent {...otherProps} />\n    )\n    } // this is a functional spinner component\n    return Spinner\n}\n// this is a higer order component\n// it is a function that takes some component that we want to wrap\nexport default WithSpinner"]},"metadata":{},"sourceType":"module"}