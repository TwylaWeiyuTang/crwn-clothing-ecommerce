{"ast":null,"code":"var _jsxFileName = \"/Users/twyla/WebDevelopment/crwn-clothing/src/components/cart-icon/CartIconComponent.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { toggleCartHidden } from '../../redux/cart/cartActions';\nimport { selectCartItemsCount } from '../../redux/cart/cartSelectors';\nimport { CartIconContainer, ShoppingIconContainer, ItemCountContainer } from './CartIconStyle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CartIconComponent = () => {\n  _s();\n\n  const itemCount = useSelector(selectCartItemsCount);\n  const toggleCartHiddenHandler = useDispatch(toggleCartHidden());\n  return /*#__PURE__*/_jsxDEV(CartIconContainer, {\n    onClick: toggleCartHiddenHandler,\n    children: [/*#__PURE__*/_jsxDEV(ShoppingIconContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ItemCountContainer, {\n      children: itemCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartIconComponent, \"UCDxGx+fcqyZ2RhhMjQTDeGcMbA=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = CartIconComponent;\n\nconst mapDispatchToProps = dispatch => ({\n  toggleCartHidden: () => dispatch(toggleCartHidden())\n}); // trigger the toggleCartHidden in cart reducer\n\n\nconst mapStateToProps = createStructuredSelector({\n  // pull off cart state from root reducer\n  itemCount: selectCartItemsCount // whole state gotten passed in, and it goes to selectors to reference that state\n  // selectCartItemsCount refers to selectCartItems, selectCartItems refers to selectCart, which\n  // uses cart state from the whole state\n\n}); // this is a selector, because it gets a state, and then pull off a small portion from that state\n\nexport default CartIconComponent; // make toggleCartHidden available as a props in the above component\n\nvar _c;\n\n$RefreshReg$(_c, \"CartIconComponent\");","map":{"version":3,"sources":["/Users/twyla/WebDevelopment/crwn-clothing/src/components/cart-icon/CartIconComponent.js"],"names":["React","useSelector","useDispatch","createStructuredSelector","toggleCartHidden","selectCartItemsCount","CartIconContainer","ShoppingIconContainer","ItemCountContainer","CartIconComponent","itemCount","toggleCartHiddenHandler","mapDispatchToProps","dispatch","mapStateToProps"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,SAASC,oBAAT,QAAqC,gCAArC;AAEA,SAASC,iBAAT,EAA4BC,qBAA5B,EAAmDC,kBAAnD,QAA6E,iBAA7E;;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAAA;;AAC9B,QAAMC,SAAS,GAAGT,WAAW,CAACI,oBAAD,CAA7B;AACA,QAAMM,uBAAuB,GAAGT,WAAW,CAACE,gBAAgB,EAAjB,CAA3C;AACA,sBACE,QAAC,iBAAD;AAAmB,IAAA,OAAO,EAAEO,uBAA5B;AAAA,4BACI,QAAC,qBAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,kBAAD;AAAA,gBAAqBD;AAArB;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CATD;;GAAMD,iB;UACcR,W,EACcC,W;;;KAF5BO,iB;;AAWN,MAAMG,kBAAkB,GAAGC,QAAQ,KAAK;AACpCT,EAAAA,gBAAgB,EAAE,MAAMS,QAAQ,CAACT,gBAAgB,EAAjB;AADI,CAAL,CAAnC,C,CAEG;;;AAEH,MAAMU,eAAe,GAAGX,wBAAwB,CAAE;AAAE;AAClDO,EAAAA,SAAS,EAAEL,oBADqC,CAEhD;AACA;AACA;;AAJgD,CAAF,CAAhD,C,CAMA;;AAEA,eAAeI,iBAAf,C,CACA","sourcesContent":["import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { createStructuredSelector } from 'reselect'\nimport { toggleCartHidden } from '../../redux/cart/cartActions'\nimport { selectCartItemsCount } from '../../redux/cart/cartSelectors'\n\nimport { CartIconContainer, ShoppingIconContainer, ItemCountContainer } from './CartIconStyle'\n\nconst CartIconComponent = () => {\n  const itemCount = useSelector(selectCartItemsCount)\n  const toggleCartHiddenHandler = useDispatch(toggleCartHidden())\n  return (\n    <CartIconContainer onClick={toggleCartHiddenHandler}>\n        <ShoppingIconContainer />\n        <ItemCountContainer>{itemCount}</ItemCountContainer>\n    </CartIconContainer>\n  )\n}\n\nconst mapDispatchToProps = dispatch => ({\n    toggleCartHidden: () => dispatch(toggleCartHidden())\n}) // trigger the toggleCartHidden in cart reducer\n\nconst mapStateToProps = createStructuredSelector ({ // pull off cart state from root reducer\n  itemCount: selectCartItemsCount\n  // whole state gotten passed in, and it goes to selectors to reference that state\n  // selectCartItemsCount refers to selectCartItems, selectCartItems refers to selectCart, which\n  // uses cart state from the whole state\n})\n// this is a selector, because it gets a state, and then pull off a small portion from that state\n\nexport default CartIconComponent\n// make toggleCartHidden available as a props in the above component"]},"metadata":{},"sourceType":"module"}