{"version":3,"file":"static/js/554.fc2548b1.chunk.js","mappings":"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","sources":["components/checkout-item/CheckoutItemStyle.js","components/checkout-item/CheckoutItem.js","components/stripe-checkout-form/StripeCheckoutStyles.js","components/stripe-checkout-form/StripeCheckout.js","components/stripe-button/StripeButton.js","pages/checkout/CheckOutStyles.js","pages/checkout/CheckoutComponent.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CheckoutItemContainer = styled.div`\n  width: 100%;\n  display: flex;\n  min-height: 100px;\n  border-bottom: 1px solid darkgrey;\n  padding: 15px 0;\n  font-size: 20px;\n  align-items: center;\n`;\n\nexport const ImageContainer = styled.div`\n  width: 23%;\n  padding-right: 15px;\n  img {\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nexport const TextContainer = styled.span`\n  width: 23%;\n`;\n\nexport const QuantityContainer = styled(TextContainer)`\n  display: flex;\n  span {\n    margin: 0 10px;\n  }\n  div {\n    cursor: pointer;\n  }\n`;\n\nexport const RemoveButtonContainer = styled.div`\n  padding-left: 12px;\n  cursor: pointer;\n`;","import React from 'react'\nimport { useDispatch} from 'react-redux'\n\nimport { clearItemFromCart, addItem, removeItem } from '../../redux/cart/cartActions'\n\nimport {\n    CheckoutItemContainer,\n    ImageContainer,\n    TextContainer,\n    QuantityContainer,\n    RemoveButtonContainer\n  } from './CheckoutItemStyle';\n\nconst CheckoutItem = ({cartItem}) => {\n    const {name, imageUrl, price, quantity} = cartItem\n    const dispatch = useDispatch()\n  return (\n    <CheckoutItemContainer>\n        <ImageContainer>\n            <img src={imageUrl} alt='item' />\n        </ImageContainer>\n        <TextContainer>{name}</TextContainer>\n        <QuantityContainer>\n            <div onClick={() => dispatch(removeItem(cartItem))}>&#10094;</div>\n            <span>{quantity}</span>\n            <div onClick={() => dispatch(addItem(cartItem))}>&#10095;</div>\n        </QuantityContainer>\n        <TextContainer>{price}</TextContainer>\n        <RemoveButtonContainer onClick={() => dispatch(clearItemFromCart(cartItem))}>&#10005;</RemoveButtonContainer>\n    </CheckoutItemContainer>\n  )\n}\n\n\nexport default CheckoutItem","import styled from \"styled-components\";\nimport CustomButtonComponent from \"../custom-button/CustomButtonComponent\";\n\nexport const CardContainer = styled.div`\n    width: 30vw;\n\n    @media screen and (max-width: 800px) {\n        width: 80vw;\n    }\n`\n\nexport const PayButtonContainer = styled(CustomButtonComponent)`\nwidth: 40%;\n  opacity: 0.7;\n  margin-left: auto;\n  margin-right: auto;\n\n\n  @media screen and (max-width: 800px) {\n    display: block;\n    opacity: 0.9;\n    min-width: unset;\n  }\n`","import { CardElement, useElements, useStripe } from \"@stripe/react-stripe-js\"\nimport axios from \"axios\"\nimport React, { useState } from 'react'\nimport { useSelector } from \"react-redux\"\nimport { selectCartTotal } from \"../../redux/cart/cartSelectors\"\nimport { CardContainer, PayButtonContainer } from \"./StripeCheckoutStyles\"\n\n\nconst CARD_OPTIONS = {\n\ticonStyle: \"solid\",\n\tstyle: {\n\t\tbase: {\n\t\t\ticonColor: \"#c4f0ff\",\n\t\t\tfontWeight: 500,\n\t\t\tfontFamily: \"Roboto, Open Sans, Segoe UI, sans-serif\",\n\t\t\tfontSize: \"16px\",\n\t\t\tfontSmoothing: \"antialiased\",\n\t\t\t\":-webkit-autofill\": { color: \"#fce883\" },\n\t\t\t\"::placeholder\": { color: \"#87bbfd\" }\n\t\t},\n\t\tinvalid: {\n\t\t\ticonColor: \"#ffc7ee\",\n\t\t\tcolor: \"#ffc7ee\"\n\t\t}\n\t}\n}\n\nexport default function PaymentForm() {\n    const [success, setSuccess ] = useState(false)\n    const stripe = useStripe()\n    const elements = useElements()\n    const total = useSelector(selectCartTotal)\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        const {error, paymentMethod} = await stripe.createPaymentMethod({\n            type: \"card\",\n            card: elements.getElement(CardElement)\n        })\n\n\n    if(!error) {\n        try {\n            const {id} = paymentMethod\n            const response = await axios.post(\"http://localhost:5000/payment\", {\n                amount: total * 100,\n                id\n            })\n\n            if(response.data.success) {\n                console.log(\"Successful payment\")\n                setSuccess(true)\n            }\n\n        } catch (error) {\n            console.log(\"Error\", error)\n        }\n    } else {\n        console.log(error.message)\n    }\n}\n\n    return (\n        <>\n        {!success ? \n        <form onSubmit={handleSubmit}>\n            <fieldset className=\"FormGroup\" >\n                <CardContainer >\n                    <CardElement options={CARD_OPTIONS} />\n                </CardContainer>\n            </fieldset>\n            <PayButtonContainer>\n                Pay\n            </PayButtonContainer>\n        </form>\n        :\n       <div>\n           <h2>Payment Successful!</h2>\n       </div> \n        }\n            \n        </>\n    )\n}","import { Elements } from \"@stripe/react-stripe-js\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport PaymentForm from \"../stripe-checkout-form/StripeCheckout\";\n\nconst PUBLIC_KEY = \"pk_test_51KksksENpvpK9J8psPLe7fxjiNMjwNLM7GxWowCDdDm1XTaFSs8LKrK1Fef5nFLKOa8SSMVsRJ6a1kQXt7HrAsse00qgExWD6S\"\n\nconst stripeTestPromise = loadStripe(PUBLIC_KEY)\n\nexport default function StripeButton() {\n\treturn (\n\t\t<Elements stripe={stripeTestPromise}>\n\t\t\t<PaymentForm />\n\t\t</Elements>\n\t)\n}","import styled from 'styled-components';\n\nexport const CheckoutPageContainer = styled.div`\n  width: 55%;\n  min-height: 90vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 50px auto 0;\n  button {\n    margin-left: auto;\n    margin-top: 50px;\n  }\n\n  @media screen and (max-width: 800px) {\n    width: 80%;\n    margin: 30px auto 0;\n  }\n`;\n\nexport const CheckoutHeaderContainer = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  justify-content: space-between;\n  border-bottom: 1px solid darkgrey;\n`;\n\nexport const HeaderBlockContainer = styled.div`\n  text-transform: capitalize;\n  width: 23%;\n  &:last-child {\n    width: 8%;\n  }\n`;\n\nexport const TotalContainer = styled.div`\n  margin-top: 30px;\n  margin-left: auto;\n  font-size: 36px;\n\n  @media screen and (max-width: 800px) {\n    font-size: 25px;\n  }\n`;\n\nexport const WarningContainer = styled.div`\n  text-align: center;\n  margin-top: 40px;\n  margin-bottom: 20px;\n  font-size: 24px;\n  color: red;\n\n  @media screen and (max-width: 800px) {\n    font-size: 18px;\n  }\n`;","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport CheckoutItem from '../../components/checkout-item/CheckoutItem'\nimport StripeButton from '../../components/stripe-button/StripeButton'\n\nimport { selectCartItems, selectCartTotal } from '../../redux/cart/cartSelectors'\nimport { CheckoutPageContainer,\n  CheckoutHeaderContainer,\n  HeaderBlockContainer,\n  TotalContainer,\n  WarningContainer} from './CheckOutStyles'\n\nconst CheckoutComponent = () => {\n  const cartItems = useSelector(selectCartItems)\n  const total = useSelector(selectCartTotal)\n\n  return (\n    <CheckoutPageContainer>\n      <CheckoutHeaderContainer>\n        <HeaderBlockContainer>\n          <span>Product</span>\n        </HeaderBlockContainer>\n        <HeaderBlockContainer>\n          <span>Description</span>\n        </HeaderBlockContainer>\n        <HeaderBlockContainer>\n          <span>Quantity</span>\n        </HeaderBlockContainer>\n        <HeaderBlockContainer>\n          <span>Price</span>\n        </HeaderBlockContainer>\n        <HeaderBlockContainer>\n          <span>Remove</span>\n        </HeaderBlockContainer>\n      </CheckoutHeaderContainer>\n      {\n        cartItems.map(cartItem => \n          <CheckoutItem key={cartItem.id} cartItem={cartItem} />\n        )\n      }\n      <TotalContainer>\n        <span>TOTAL: ${total}</span>\n      </TotalContainer>\n      <WarningContainer>\n      *Please use the following test credit card for payments*\n      <br />\n      4242 4242 4242 4242 - Exp: 01/20 - CVV: 123\n    </WarningContainer>\n      <StripeButton price={total}/>\n    </CheckoutPageContainer>\n  )\n}\n\nexport default CheckoutComponent"],"names":["CheckoutItemContainer","styled","ImageContainer","TextContainer","QuantityContainer","RemoveButtonContainer","cartItem","name","imageUrl","price","quantity","dispatch","useDispatch","src","alt","onClick","removeItem","addItem","clearItemFromCart","CardContainer","PayButtonContainer","CustomButtonComponent","CARD_OPTIONS","iconStyle","style","base","iconColor","fontWeight","fontFamily","fontSize","fontSmoothing","color","invalid","PaymentForm","useState","success","setSuccess","stripe","useStripe","elements","useElements","total","useSelector","selectCartTotal","handleSubmit","e","preventDefault","createPaymentMethod","type","card","getElement","CardElement","error","paymentMethod","id","axios","amount","data","console","log","message","onSubmit","className","options","stripeTestPromise","loadStripe","StripeButton","Elements","CheckoutPageContainer","CheckoutHeaderContainer","HeaderBlockContainer","TotalContainer","WarningContainer","cartItems","selectCartItems","map"],"sourceRoot":""}