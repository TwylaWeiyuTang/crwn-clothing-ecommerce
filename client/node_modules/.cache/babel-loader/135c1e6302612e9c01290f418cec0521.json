{"ast":null,"code":"var _jsxFileName = \"/Users/twyla/WebDevelopment/crwn-clothing/src/components/cart-dropdown/CartDropdown.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { withRouter } from '../../withRouter';\nimport CustomButtonComponent from '../custom-button/CustomButtonComponent';\nimport CartItemComponent from '../cart-item/CartItemComponent';\nimport { selectCartItems } from '../../redux/cart/cartSelectors';\nimport './cartDropdownStyle.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CartDropdown = _ref => {\n  let {\n    cartItems\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cart-dropdown\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cart-items\",\n      children: cartItems.length ? cartItems.map(cartItem => /*#__PURE__*/_jsxDEV(CartItemComponent, {\n        item: cartItem\n      }, cartItem.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 15\n      }, this)) // if cartitems has length, which means there is item in the cart\n      : /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"empty-message\",\n        children: \"Your cart is empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 14\n      }, this) // if there is no length, then the cart is empty\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CustomButtonComponent, {\n      children: \"GO TO CHECKOUT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CartDropdown;\nconst mapStateToProps = createStructuredSelector({\n  // pull off cart state from root reducer\n  cartItems: selectCartItems\n});\nexport default withRouter(connect(mapStateToProps)(CartDropdown));\n\nvar _c;\n\n$RefreshReg$(_c, \"CartDropdown\");","map":{"version":3,"sources":["/Users/twyla/WebDevelopment/crwn-clothing/src/components/cart-dropdown/CartDropdown.js"],"names":["React","connect","createStructuredSelector","withRouter","CustomButtonComponent","CartItemComponent","selectCartItems","CartDropdown","cartItems","length","map","cartItem","id","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,qBAAP,MAAkC,wCAAlC;AACA,OAAOC,iBAAP,MAA8B,gCAA9B;AACA,SAASC,eAAT,QAAgC,gCAAhC;AAEA,OAAO,0BAAP;;;AAEA,MAAMC,YAAY,GAAG,QAAiB;AAAA,MAAhB;AAACC,IAAAA;AAAD,GAAgB;AACpC,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,gBAEIA,SAAS,CAACC,MAAV,GACAD,SAAS,CAACE,GAAV,CAAcC,QAAQ,iBACpB,QAAC,iBAAD;AAAqC,QAAA,IAAI,EAAIA;AAA7C,SAAwBA,QAAQ,CAACC,EAAjC;AAAA;AAAA;AAAA;AAAA,cADF,CADA,CAGC;AAHD,qBAKC;AAAM,QAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPL,CAQI;;AARJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAYI,QAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAjBD;;KAAML,Y;AAmBN,MAAMM,eAAe,GAAGX,wBAAwB,CAAE;AAAE;AAClDM,EAAAA,SAAS,EAAEF;AADqC,CAAF,CAAhD;AAIA,eAAeH,UAAU,CAACF,OAAO,CAAEY,eAAF,CAAP,CAA2BN,YAA3B,CAAD,CAAzB","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { createStructuredSelector } from 'reselect'\nimport { withRouter } from '../../withRouter'\nimport CustomButtonComponent from '../custom-button/CustomButtonComponent'\nimport CartItemComponent from '../cart-item/CartItemComponent'\nimport { selectCartItems } from '../../redux/cart/cartSelectors'\n\nimport './cartDropdownStyle.scss'\n\nconst CartDropdown = ({cartItems}) => {\n  return (\n    <div className='cart-dropdown'>\n        <div className='cart-items'>\n          {\n            cartItems.length ?(\n            cartItems.map(cartItem => \n             (<CartItemComponent key={cartItem.id} item = {cartItem} />)))\n             // if cartitems has length, which means there is item in the cart\n            :\n            (<span className='empty-message'>Your cart is empty</span>)\n            // if there is no length, then the cart is empty\n            }\n        </div>\n        <CustomButtonComponent>GO TO CHECKOUT</CustomButtonComponent>\n    </div>\n  )\n}\n\nconst mapStateToProps = createStructuredSelector ({ // pull off cart state from root reducer\n  cartItems: selectCartItems\n})\n\nexport default withRouter(connect (mapStateToProps) (CartDropdown))"]},"metadata":{},"sourceType":"module"}