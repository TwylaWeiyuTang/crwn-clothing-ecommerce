{"ast":null,"code":"var _jsxFileName = \"/Users/twyla/WebDevelopment/crwn-clothing/client/src/components/stripe-button/StripeButton.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst formatPrice = _ref => {\n  let {\n    amount,\n    currency,\n    quantity\n  } = _ref;\n  const numberFormat = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency,\n    currencyDisplay: 'symbol'\n  });\n  const parts = numberFormat.formatToParts(amount);\n  let zeroDecimalCurrency = true;\n\n  for (let part of parts) {\n    if (part.type === 'decimal') {\n      zeroDecimalCurrency = false;\n    }\n  }\n\n  amount = zeroDecimalCurrency ? amount : amount / 100;\n  const total = (quantity * amount).toFixed(2);\n  return numberFormat.format(total);\n};\n\nconst StripeButton = () => {\n  _s();\n\n  const [quantity, setQuantity] = useState(1);\n  const [amount, setAmount] = useState(0);\n  const [currency, setCurrency] = useState('USD');\n  useEffect(() => {\n    async function fetchConfig() {\n      // Fetch config from our backend.\n      const {\n        unitAmount,\n        currency\n      } = await fetch('/config').then(r => r.json());\n      setAmount(unitAmount);\n      setCurrency(currency);\n    }\n\n    fetchConfig();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sr-root\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sr-main\",\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Single photo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Purchase a Pasha original photo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pasha-image\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              alt: \"Random asset from Picsum\",\n              src: \"https://picsum.photos/280/320?random=4\",\n              width: \"140\",\n              height: \"160\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          action: \"/create-checkout-session\",\n          method: \"POST\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"quantity-setter\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"increment-btn\",\n              disabled: quantity === 1,\n              onClick: () => setQuantity(quantity - 1),\n              type: \"button\",\n              children: \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"quantity-input\",\n              min: \"1\",\n              max: \"10\",\n              value: quantity,\n              name: \"quantity\",\n              readOnly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"increment-btn\",\n              disabled: quantity === 10,\n              onClick: () => setQuantity(quantity + 1),\n              type: \"button\",\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"sr-legal-text\",\n            children: \"Number of copies (max 10)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            role: \"link\",\n            id: \"submit\",\n            type: \"submit\",\n            children: [\"Buy \", formatPrice({\n              amount,\n              currency,\n              quantity\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StripeButton, \"ikTQJ64PVk5ydb0NFzRGN88DkjM=\");\n\n_c = StripeButton;\nexport default StripeButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"StripeButton\");","map":{"version":3,"sources":["/Users/twyla/WebDevelopment/crwn-clothing/client/src/components/stripe-button/StripeButton.js"],"names":["React","useEffect","useState","formatPrice","amount","currency","quantity","numberFormat","Intl","NumberFormat","style","currencyDisplay","parts","formatToParts","zeroDecimalCurrency","part","type","total","toFixed","format","StripeButton","setQuantity","setAmount","setCurrency","fetchConfig","unitAmount","fetch","then","r","json"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst formatPrice = ({ amount, currency, quantity }) => {\n  const numberFormat = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency,\n    currencyDisplay: 'symbol',\n  });\n  const parts = numberFormat.formatToParts(amount);\n  let zeroDecimalCurrency = true;\n  for (let part of parts) {\n    if (part.type === 'decimal') {\n      zeroDecimalCurrency = false;\n    }\n  }\n  amount = zeroDecimalCurrency ? amount : amount / 100;\n  const total = (quantity * amount).toFixed(2);\n  return numberFormat.format(total);\n};\n\nconst StripeButton = () => {\n  const [quantity, setQuantity] = useState(1);\n  const [amount, setAmount] = useState(0);\n  const [currency, setCurrency] = useState('USD');\n\n  useEffect(() => {\n    async function fetchConfig() {\n      // Fetch config from our backend.\n      const {\n        unitAmount,\n        currency\n      } = await fetch('/config').then(r => r.json());\n      setAmount(unitAmount);\n      setCurrency(currency);\n    }\n    fetchConfig();\n  }, []);\n\n  return (\n    <div className=\"sr-root\">\n      <div className=\"sr-main\">\n        <section className=\"container\">\n          <div>\n            <h1>Single photo</h1>\n            <h4>Purchase a Pasha original photo</h4>\n            <div className=\"pasha-image\">\n              <img\n                alt=\"Random asset from Picsum\"\n                src=\"https://picsum.photos/280/320?random=4\"\n                width=\"140\"\n                height=\"160\"\n              />\n            </div>\n          </div>\n          <form action=\"/create-checkout-session\" method=\"POST\">\n            <div className=\"quantity-setter\">\n              <button\n                className=\"increment-btn\"\n                disabled={quantity === 1}\n                onClick={() => setQuantity(quantity - 1)}\n                type=\"button\"\n              >\n                -\n              </button>\n              <input\n                type=\"number\"\n                id=\"quantity-input\"\n                min=\"1\"\n                max=\"10\"\n                value={quantity}\n                name=\"quantity\"\n                readOnly\n              />\n              <button\n                className=\"increment-btn\"\n                disabled={quantity === 10}\n                onClick={() => setQuantity(quantity + 1)}\n                type=\"button\"\n              >\n                +\n              </button>\n            </div>\n            <p className=\"sr-legal-text\">Number of copies (max 10)</p>\n\n            <button role=\"link\" id=\"submit\" type=\"submit\">\n              Buy {formatPrice({amount, currency, quantity})}\n            </button>\n          </form>\n        </section>\n      </div>\n    </div>\n  );\n};\n\nexport default StripeButton;"]},"metadata":{},"sourceType":"module"}