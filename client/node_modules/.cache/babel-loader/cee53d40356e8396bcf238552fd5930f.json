{"ast":null,"code":"var _jsxFileName = \"/Users/twyla/WebDevelopment/crwn-clothing/client/src/components/stripe-checkout-form/StripeCheckout.js\",\n    _s = $RefreshSig$();\n\nimport { CardElement, useElements, useStripe } from \"@stripe/react-stripe-js\";\nimport axios from \"axios\";\nimport React, { useState, useSelector } from 'react';\nimport { selectCartTotal } from \"../../redux/cart/cartSelectors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CARD_OPTIONS = {\n  iconStyle: \"solid\",\n  style: {\n    base: {\n      iconColor: \"#c4f0ff\",\n      fontWeight: 500,\n      fontFamily: \"Roboto, Open Sans, Segoe UI, sans-serif\",\n      fontSize: \"16px\",\n      fontSmoothing: \"antialiased\",\n      \":-webkit-autofill\": {\n        color: \"#fce883\"\n      },\n      \"::placeholder\": {\n        color: \"#87bbfd\"\n      }\n    },\n    invalid: {\n      iconColor: \"#ffc7ee\",\n      color: \"#ffc7ee\"\n    }\n  }\n};\nexport default function PaymentForm() {\n  _s();\n\n  const [success, setSuccess] = useState(false);\n  const stripe = useStripe();\n  const elements = useElements();\n  const total = useSelector(selectCartTotal);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: \"card\",\n      card: elements.getElement(CardElement)\n    });\n\n    if (!error) {\n      try {\n        const {\n          id\n        } = paymentMethod;\n        const response = await axios.post(\"http://localhost:5000/payment\", {\n          amount: total * 1000,\n          id\n        });\n\n        if (response.data.success) {\n          console.log(\"Successful payment\");\n          setSuccess(true);\n        }\n      } catch (error) {\n        console.log(\"Error\", error);\n      }\n    } else {\n      console.log(error.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !success ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n        className: \"FormGroup\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"FormRow\",\n          style: {\n            width: \"400px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(CardElement, {\n            options: CARD_OPTIONS\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Pay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"You just bought a sweet spatula congrats this is the best decision of you're life\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 8\n    }, this)\n  }, void 0, false);\n}\n\n_s(PaymentForm, \"WM29VmqS9nVz05todnxcA1xhxVk=\", false, function () {\n  return [useStripe, useElements, useSelector];\n});\n\n_c = PaymentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentForm\");","map":{"version":3,"sources":["/Users/twyla/WebDevelopment/crwn-clothing/client/src/components/stripe-checkout-form/StripeCheckout.js"],"names":["CardElement","useElements","useStripe","axios","React","useState","useSelector","selectCartTotal","CARD_OPTIONS","iconStyle","style","base","iconColor","fontWeight","fontFamily","fontSize","fontSmoothing","color","invalid","PaymentForm","success","setSuccess","stripe","elements","total","handleSubmit","e","preventDefault","error","paymentMethod","createPaymentMethod","type","card","getElement","id","response","post","amount","data","console","log","message","width"],"mappings":"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","sourcesContent":["import { CardElement, useElements, useStripe } from \"@stripe/react-stripe-js\"\nimport axios from \"axios\"\nimport React, { useState, useSelector } from 'react'\nimport { selectCartTotal } from \"../../redux/cart/cartSelectors\"\n\n\nconst CARD_OPTIONS = {\n\ticonStyle: \"solid\",\n\tstyle: {\n\t\tbase: {\n\t\t\ticonColor: \"#c4f0ff\",\n\t\t\tfontWeight: 500,\n\t\t\tfontFamily: \"Roboto, Open Sans, Segoe UI, sans-serif\",\n\t\t\tfontSize: \"16px\",\n\t\t\tfontSmoothing: \"antialiased\",\n\t\t\t\":-webkit-autofill\": { color: \"#fce883\" },\n\t\t\t\"::placeholder\": { color: \"#87bbfd\" }\n\t\t},\n\t\tinvalid: {\n\t\t\ticonColor: \"#ffc7ee\",\n\t\t\tcolor: \"#ffc7ee\"\n\t\t}\n\t}\n}\n\nexport default function PaymentForm() {\n    const [success, setSuccess ] = useState(false)\n    const stripe = useStripe()\n    const elements = useElements()\n    const total = useSelector(selectCartTotal)\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        const {error, paymentMethod} = await stripe.createPaymentMethod({\n            type: \"card\",\n            card: elements.getElement(CardElement)\n        })\n\n\n    if(!error) {\n        try {\n            const {id} = paymentMethod\n            const response = await axios.post(\"http://localhost:5000/payment\", {\n                amount: total * 1000,\n                id\n            })\n\n            if(response.data.success) {\n                console.log(\"Successful payment\")\n                setSuccess(true)\n            }\n\n        } catch (error) {\n            console.log(\"Error\", error)\n        }\n    } else {\n        console.log(error.message)\n    }\n}\n\n    return (\n        <>\n        {!success ? \n        <form onSubmit={handleSubmit}>\n            <fieldset className=\"FormGroup\" >\n                <div className=\"FormRow\" style={{width: \"400px\"}}>\n                    <CardElement options={CARD_OPTIONS} />\n                </div>\n            </fieldset>\n            <button>Pay</button>\n        </form>\n        :\n       <div>\n           <h2>You just bought a sweet spatula congrats this is the best decision of you're life</h2>\n       </div> \n        }\n            \n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}