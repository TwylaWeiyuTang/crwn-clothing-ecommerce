{"ast":null,"code":"// utility functions allow us to keep our file clean and organise functions we may need in multiple files\n// in one location\nexport const addItemToCart = (cartItems, cartItemToAdd) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToAdd.id); // it the id of the cartItem we want to add matches with the id of item already in the cart\n  // we will include it in this array\n  // if it doesn't find any matching value, the value of this variable will be undefined\n\n  if (existingCartItem) {\n    return cartItems.map(cartItem => cartItem.id === cartItemToAdd.id ? { ...cartItem,\n      quantity: cartItem.quantity + 1\n    } // if the id matches with the existing\n    // cart item, then increase the quantity of that item by 1\n    : cartItem // otherwise return the original cartItem\n    );\n  }\n\n  return [...cartItems, { ...cartItemToAdd,\n    quantity: 1\n  }]; // if the cart item we want to add doesn not match with any cart item id that exists in our\n  // cart, we will just add them as a new state in our array and set the base quantity for them\n  // to 1\n};","map":{"version":3,"sources":["/Users/twyla/WebDevelopment/crwn-clothing/src/redux/cart/cartUtils.js"],"names":["addItemToCart","cartItems","cartItemToAdd","existingCartItem","find","cartItem","id","map","quantity"],"mappings":"AAAA;AACA;AAEA,OAAO,MAAMA,aAAa,GAAG,CAACC,SAAD,EAAYC,aAAZ,KAA8B;AACvD,QAAMC,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CAAeC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EAAzD,CAAzB,CADuD,CAEvD;AACA;AACA;;AAEA,MAAIH,gBAAJ,EAAsB;AAClB,WAAOF,SAAS,CAACM,GAAV,CAAcF,QAAQ,IACzBA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EAA9B,GACA,EAAC,GAAGD,QAAJ;AAAcG,MAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAoB;AAA5C,KADA,CAC+C;AAC/C;AAFA,MAGEH,QAJC,CAIQ;AAJR,KAAP;AAMH;;AAED,SAAO,CAAC,GAAGJ,SAAJ,EAAe,EAAC,GAAGC,aAAJ;AAAmBM,IAAAA,QAAQ,EAAE;AAA7B,GAAf,CAAP,CAfuD,CAgBvD;AACA;AACA;AACH,CAnBM","sourcesContent":["// utility functions allow us to keep our file clean and organise functions we may need in multiple files\n// in one location\n\nexport const addItemToCart = (cartItems, cartItemToAdd) => {\n    const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToAdd.id)\n    // it the id of the cartItem we want to add matches with the id of item already in the cart\n    // we will include it in this array\n    // if it doesn't find any matching value, the value of this variable will be undefined\n\n    if (existingCartItem) {\n        return cartItems.map(cartItem => \n            cartItem.id === cartItemToAdd.id? \n            {...cartItem, quantity: cartItem.quantity + 1} // if the id matches with the existing\n            // cart item, then increase the quantity of that item by 1\n            : cartItem // otherwise return the original cartItem\n            )\n    }\n\n    return [...cartItems, {...cartItemToAdd, quantity: 1}]\n    // if the cart item we want to add doesn not match with any cart item id that exists in our\n    // cart, we will just add them as a new state in our array and set the base quantity for them\n    // to 1\n}"]},"metadata":{},"sourceType":"module"}