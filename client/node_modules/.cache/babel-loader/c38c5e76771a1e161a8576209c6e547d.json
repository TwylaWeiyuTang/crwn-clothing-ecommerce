{"ast":null,"code":"var _jsxFileName = \"/Users/twyla/WebDevelopment/crwn-clothing/src/components/cart-dropdown/CartDropdown.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport CartItemComponent from '../cart-item/CartItemComponent';\nimport { selectCartItems } from '../../redux/cart/cartSelectors';\nimport { toggleCartHidden } from '../../redux/cart/cartActions';\nimport { CartDropdownContainer, CartItemContainer, EmptyMessageContainer, CartDropdownButton } from './CartDropdownStyle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CartDropdown = _ref => {\n  _s();\n\n  let {\n    dispatch\n  } = _ref;\n  const history = useNavigate();\n  const cartItems = useSelector(selectCartItems);\n  return /*#__PURE__*/_jsxDEV(CartDropdownContainer, {\n    children: [/*#__PURE__*/_jsxDEV(CartItemContainer, {\n      children: cartItems.length ? cartItems.map(cartItem => /*#__PURE__*/_jsxDEV(CartItemComponent, {\n        item: cartItem\n      }, cartItem.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 15\n      }, this)) // if cartitems has length, which means there is item in the cart\n      : /*#__PURE__*/_jsxDEV(EmptyMessageContainer, {\n        children: \"Your cart is empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 14\n      }, this) // if there is no length, then the cart is empty\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CartDropdownButton, {\n      onClick: () => {\n        history('/checkout');\n        dispatch(toggleCartHidden()); // this will toggle the cart icon again, so the cart\n        // dropdown will be closed automatically while we being redirected to checkout page\n      },\n      children: \"GO TO CHECKOUT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartDropdown, \"6dMZOn82LMwgeViP4DtXucqy5b8=\", false, function () {\n  return [useNavigate, useSelector];\n});\n\n_c = CartDropdown;\nexport default CartDropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartDropdown\");","map":{"version":3,"sources":["/Users/twyla/WebDevelopment/crwn-clothing/src/components/cart-dropdown/CartDropdown.js"],"names":["React","useSelector","useNavigate","CartItemComponent","selectCartItems","toggleCartHidden","CartDropdownContainer","CartItemContainer","EmptyMessageContainer","CartDropdownButton","CartDropdown","dispatch","history","cartItems","length","map","cartItem","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,iBAAP,MAA8B,gCAA9B;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AAEA,SAASC,qBAAT,EAAgCC,iBAAhC,EAAmDC,qBAAnD,EAA0EC,kBAA1E,QAAoG,qBAApG;;;AAEA,MAAMC,YAAY,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AACnC,QAAMC,OAAO,GAAGV,WAAW,EAA3B;AACA,QAAMW,SAAS,GAAGZ,WAAW,CAACG,eAAD,CAA7B;AAEA,sBACE,QAAC,qBAAD;AAAA,4BACI,QAAC,iBAAD;AAAA,gBAEIS,SAAS,CAACC,MAAV,GACAD,SAAS,CAACE,GAAV,CAAcC,QAAQ,iBACpB,QAAC,iBAAD;AAAqC,QAAA,IAAI,EAAIA;AAA7C,SAAwBA,QAAQ,CAACC,EAAjC;AAAA;AAAA;AAAA;AAAA,cADF,CADA,CAGC;AAHD,qBAKC,QAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPL,CAQI;;AARJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAYI,QAAC,kBAAD;AAAoB,MAAA,OAAO,EAAE,MAAM;AACjCL,QAAAA,OAAO,CAAC,WAAD,CAAP;AACAD,QAAAA,QAAQ,CAACN,gBAAgB,EAAjB,CAAR,CAFiC,CAEJ;AAC7B;AACD,OAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CAxBD;;GAAMK,Y;UACYR,W,EACED,W;;;KAFdS,Y;AA0BN,eAAeA,YAAf","sourcesContent":["import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { useNavigate } from 'react-router-dom';\nimport CartItemComponent from '../cart-item/CartItemComponent'\nimport { selectCartItems } from '../../redux/cart/cartSelectors'\nimport { toggleCartHidden } from '../../redux/cart/cartActions';\n\nimport { CartDropdownContainer, CartItemContainer, EmptyMessageContainer, CartDropdownButton } from './CartDropdownStyle';\n\nconst CartDropdown = ({dispatch}) => {\n  const history = useNavigate();\n  const cartItems = useSelector(selectCartItems)\n\n  return (\n    <CartDropdownContainer>\n        <CartItemContainer>\n          {\n            cartItems.length ?(\n            cartItems.map(cartItem => \n             (<CartItemComponent key={cartItem.id} item = {cartItem} />)))\n             // if cartitems has length, which means there is item in the cart\n            :\n            (<EmptyMessageContainer>Your cart is empty</EmptyMessageContainer>)\n            // if there is no length, then the cart is empty\n            }\n        </CartItemContainer>\n        <CartDropdownButton onClick={() => {\n          history('/checkout');\n          dispatch(toggleCartHidden()) // this will toggle the cart icon again, so the cart\n          // dropdown will be closed automatically while we being redirected to checkout page\n        }}>GO TO CHECKOUT</CartDropdownButton>\n    </CartDropdownContainer>\n  )\n}\n\nexport default CartDropdown"]},"metadata":{},"sourceType":"module"}